/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Configuracion.Conexion;
import Modelo.Camion;
import Modelo.Clase_1;
import Modelo.Clase_2;
import Modelo.Coche;
import Modelo.Furgoneta;
import Modelo.Microbus;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public final class Formulario extends javax.swing.JFrame {

    Clase_1 clase1 = new Clase_1();
    Clase_2 clase2 = new Clase_2();
    Coche coche1 = new Coche();
    Microbus micro = new Microbus();
    Furgoneta furgo = new Furgoneta();
    Camion camion = new Camion();

    Conexion con = new Conexion();
    Connection cn;
    Statement st;
    ResultSet rs;
    DefaultTableModel modelo;
    TableRowSorter trs;

    public Formulario() {

        initComponents();
        setLocationRelativeTo(null);
        //    clase2.Limpiar();
        limpiarPantalla();
        listar();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jblTitulo = new javax.swing.JLabel();
        pnlDatos = new javax.swing.JPanel();
        lblMatricula = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblPrecioBase = new javax.swing.JLabel();
        lblPrecioDia = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        txtPrecioBase = new javax.swing.JTextField();
        txtPrecioDia = new javax.swing.JTextField();
        cbxVehiculo = new javax.swing.JComboBox<>();
        lblPrecioAdicional = new javax.swing.JLabel();
        txtPrecioAdicional = new javax.swing.JTextField();
        lblPMA = new javax.swing.JLabel();
        txtPma = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPrecioBasePma = new javax.swing.JTextField();
        lblEstadoVehiculo = new javax.swing.JLabel();
        lblDias = new javax.swing.JLabel();
        txtDias = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        cbxEstado = new javax.swing.JComboBox<>();
        btnConfirmaAlq = new javax.swing.JButton();
        btnTerminaAlq = new javax.swing.JButton();
        pnlOperaciones = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnAlquilar = new javax.swing.JButton();
        pnlLista = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTabla = new javax.swing.JTable();
        lblFiltrar = new javax.swing.JLabel();
        txtFiltrar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jblTitulo.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        jblTitulo.setText("ALQUILER DE AUTOS");

        pnlDatos.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        lblMatricula.setText("MATRICULA");

        jLabel1.setText("TIPO DE VEHICULO");

        lblPrecioBase.setText("PRECIO BASE");

        lblPrecioDia.setText("PRECIO POR DIA");

        txtPrecioBase.setEditable(false);
        txtPrecioBase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioBaseActionPerformed(evt);
            }
        });

        txtPrecioDia.setEditable(false);

        cbxVehiculo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Coche", "Microbus", "Furgoneta", "Camion" }));
        cbxVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxVehiculoActionPerformed(evt);
            }
        });

        lblPrecioAdicional.setText("PRECIO ADICIONAL");

        txtPrecioAdicional.setEditable(false);

        lblPMA.setText("PMA (peso del vehiculo en toneladas)");

        txtPma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPmaKeyTyped(evt);
            }
        });

        jLabel2.setText("PRECIO BASE X PMA");

        txtPrecioBasePma.setEditable(false);

        lblEstadoVehiculo.setText("ESTADO VEHICULO");

        lblDias.setText("DIAS");

        txtDias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDiasKeyTyped(evt);
            }
        });

        lblTotal.setText("TOTAL");

        cbxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sin Alquilar", "Alquilado" }));
        cbxEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxEstadoActionPerformed(evt);
            }
        });

        btnConfirmaAlq.setText("CONFIRMAR ALQUILER");
        btnConfirmaAlq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmaAlqActionPerformed(evt);
            }
        });

        btnTerminaAlq.setText("TERMINAR ALQUILER");
        btnTerminaAlq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerminaAlqActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDatosLayout = new javax.swing.GroupLayout(pnlDatos);
        pnlDatos.setLayout(pnlDatosLayout);
        pnlDatosLayout.setHorizontalGroup(
            pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbxVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addComponent(lblMatricula)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblPrecioBase)
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addComponent(lblPMA, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrecioBase, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(txtPma, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEstadoVehiculo)
                    .addComponent(lblPrecioDia)
                    .addComponent(jLabel2)
                    .addComponent(lblPrecioAdicional))
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPrecioBasePma, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecioAdicional, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecioDia, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(177, 177, 177)
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnTerminaAlq, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirmaAlq))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDatosLayout.createSequentialGroup()
                        .addComponent(lblTotal)
                        .addGap(16, 16, 16))
                    .addComponent(txtTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDias, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDatosLayout.createSequentialGroup()
                        .addComponent(lblDias)
                        .addGap(21, 21, 21)))
                .addGap(29, 29, 29))
        );
        pnlDatosLayout.setVerticalGroup(
            pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosLayout.createSequentialGroup()
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMatricula)
                            .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txtPrecioBasePma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDias))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbxVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblPrecioDia)
                                .addComponent(txtPrecioDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnConfirmaAlq)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPMA)
                            .addComponent(txtPma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecioAdicional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPrecioAdicional))
                        .addGap(7, 7, 7)
                        .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPrecioBase)
                            .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPrecioBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblEstadoVehiculo)
                                .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addComponent(lblTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTerminaAlq))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pnlOperaciones.setBorder(javax.swing.BorderFactory.createTitledBorder("Op"));

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText("MODIFICAR");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnNuevo.setText("NUEVO");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnAlquilar.setText("ALQUILAR");
        btnAlquilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlquilarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOperacionesLayout = new javax.swing.GroupLayout(pnlOperaciones);
        pnlOperaciones.setLayout(pnlOperacionesLayout);
        pnlOperacionesLayout.setHorizontalGroup(
            pnlOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOperacionesLayout.createSequentialGroup()
                .addGroup(pnlOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlOperacionesLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(btnModificar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(btnNuevo))
                    .addGroup(pnlOperacionesLayout.createSequentialGroup()
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlquilar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlOperacionesLayout.setVerticalGroup(
            pnlOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOperacionesLayout.createSequentialGroup()
                .addGroup(pnlOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAgregar)
                        .addComponent(btnEliminar)
                        .addComponent(btnNuevo)))
                .addGap(18, 18, 18)
                .addGroup(pnlOperacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAlquilar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnlLista.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista"));

        tblTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matricula", "Tipo Vehiculo", "Peso Vehiculo", "Precio Base Dia", "Precio Base PMA", "Precio Alq Dia", "Precio Alquiler Fijo", "Estado Alquiler", "Dias Alquilados", "Precio Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTabla);
        if (tblTabla.getColumnModel().getColumnCount() > 0) {
            tblTabla.getColumnModel().getColumn(0).setResizable(false);
            tblTabla.getColumnModel().getColumn(1).setResizable(false);
            tblTabla.getColumnModel().getColumn(2).setResizable(false);
            tblTabla.getColumnModel().getColumn(3).setResizable(false);
            tblTabla.getColumnModel().getColumn(4).setResizable(false);
            tblTabla.getColumnModel().getColumn(5).setResizable(false);
            tblTabla.getColumnModel().getColumn(6).setResizable(false);
            tblTabla.getColumnModel().getColumn(7).setResizable(false);
            tblTabla.getColumnModel().getColumn(8).setResizable(false);
            tblTabla.getColumnModel().getColumn(9).setResizable(false);
        }

        lblFiltrar.setText("Filtrar:");

        txtFiltrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltrarKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlListaLayout = new javax.swing.GroupLayout(pnlLista);
        pnlLista.setLayout(pnlListaLayout);
        pnlListaLayout.setHorizontalGroup(
            pnlListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1119, Short.MAX_VALUE)
                .addGap(16, 16, 16))
            .addGroup(pnlListaLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblFiltrar)
                .addGap(18, 18, 18)
                .addComponent(txtFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(991, Short.MAX_VALUE))
        );
        pnlListaLayout.setVerticalGroup(
            pnlListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListaLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(pnlListaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFiltrar)
                    .addComponent(txtFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jblTitulo)
                .addGap(75, 75, 75))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlOperaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(100, 100, 100))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlOperaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrecioBaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioBaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioBaseActionPerformed

    private void cbxVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxVehiculoActionPerformed
        // TODO add your handling code here:

        clase2.CalcularPrecioBase(clase1);

        txtPrecioBase.setText(Float.toString(clase1.getPrecio_base()));

        String tipovh = cbxVehiculo.getSelectedItem().toString();

        if (tipovh.equals("Coche")) {

            txtPma.setEditable(false);
            txtPma.setText("0");

            clase2.CalcularPrecioCoche(clase1);

            txtPrecioBasePma.setText(Float.toString(clase1.getPrecio_base_pma()));
            txtPrecioDia.setText(Float.toString(clase1.getPrecio_dia()));
            txtPrecioAdicional.setText(Float.toString(clase1.getPrecio_adicional()));

        } else {

            if (tipovh.equals("Microbus")) {

                txtPma.setEditable(false);
                txtPma.setText("0");

                clase2.CalcularPrecioMicro(clase1);

                txtPrecioBasePma.setText(Float.toString(clase1.getPrecio_base_pma()));
                txtPrecioDia.setText(Float.toString(clase1.getPrecio_dia()));
                txtPrecioAdicional.setText(Float.toString(clase1.getPrecio_adicional()));
            }

            if (tipovh.equals("Furgoneta")) {

                txtPma.setEditable(true);

                clase2.CalcularPrecioFurgo(clase1);

                txtPrecioBasePma.setText(Float.toString(clase1.getPrecio_base_pma()));
                txtPrecioDia.setText(Float.toString(clase1.getPrecio_dia()));
                txtPrecioAdicional.setText(Float.toString(clase1.getPrecio_adicional()));
            }

            if (tipovh.equals("Camion")) {

                txtPma.setEditable(true);

                clase2.CalcularPrecioCamion(clase1);

                txtPrecioBasePma.setText(Float.toString(clase1.getPrecio_base_pma()));
                txtPrecioDia.setText(Float.toString(clase1.getPrecio_dia()));
                txtPrecioAdicional.setText(Float.toString(clase1.getPrecio_adicional()));
            }
        }
    }//GEN-LAST:event_cbxVehiculoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        Agregar();
        limpiarTabla();
        listar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        int fila = tblTabla.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(rootPane, "Debe Seleccionar Una fila..!!");
        } else {
            String mat = (String) tblTabla.getValueAt(fila, 0);
            String tipv = (String) tblTabla.getValueAt(fila, 1);
            float peso = Float.parseFloat((String) tblTabla.getValueAt(fila, 2).toString());
            float pbd = Float.parseFloat((String) tblTabla.getValueAt(fila, 3).toString());
            float pbp = Float.parseFloat((String) tblTabla.getValueAt(fila, 4).toString());
            float pad = Float.parseFloat((String) tblTabla.getValueAt(fila, 5).toString());
            float paf = Float.parseFloat((String) tblTabla.getValueAt(fila, 6).toString());
            String evh = (String) tblTabla.getValueAt(fila, 7);
            int dia = Integer.parseInt((String) tblTabla.getValueAt(fila, 8).toString());
            float total = Float.parseFloat((String) tblTabla.getValueAt(fila, 9).toString());

            txtMatricula.setText(mat);
            cbxVehiculo.setSelectedItem(tipv);
            txtPma.setText("" + peso);
            txtPrecioBase.setText("" + pbd);
            txtPrecioBasePma.setText("" + pbp);
            txtPrecioDia.setText("" + pad);
            txtPrecioAdicional.setText("" + paf);
            cbxEstado.setSelectedItem(evh);
            txtDias.setText("" + dia);
            txtTotal.setText("" + total);

            if (evh.equals("Alquilado")) {
                JOptionPane.showMessageDialog(null, "Vehiculo se encuentra alquilado, para poder editar, debe terminar alquiler actual");
                btnModificar.setEnabled(false);
                btnEliminar.setEnabled(false);
            } else {
                btnModificar.setEnabled(true);
                btnEliminar.setEnabled(true);
            }

            limpiarEdicion();

        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void cbxEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxEstadoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        Modificar();
        limpiarTabla();
        listar();

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnAlquilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlquilarActionPerformed
        // TODO add your handling code here:

        int fila = tblTabla.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Debee Seleccionar Una fila..!!");
        } else {
            String mat = (String) tblTabla.getValueAt(fila, 0);
            String tipv = (String) tblTabla.getValueAt(fila, 1);
            float peso = Float.parseFloat((String) tblTabla.getValueAt(fila, 2).toString());
            float pbd = Float.parseFloat((String) tblTabla.getValueAt(fila, 3).toString());
            float pbp = Float.parseFloat((String) tblTabla.getValueAt(fila, 4).toString());
            float pad = Float.parseFloat((String) tblTabla.getValueAt(fila, 5).toString());
            float paf = Float.parseFloat((String) tblTabla.getValueAt(fila, 6).toString());
            String evh = (String) tblTabla.getValueAt(fila, 7);
            int dia = Integer.parseInt((String) tblTabla.getValueAt(fila, 8).toString());
            float total = Float.parseFloat((String) tblTabla.getValueAt(fila, 9).toString());

            if (evh.equals("Alquilado")) {
                JOptionPane.showMessageDialog(null, "Vehiculo se encuentra alquilado, para alquilar nuevamente, debe terminar alquiler actual");
                btnConfirmaAlq.setEnabled(false);
                btnTerminaAlq.setEnabled(true);
            } else {
                btnConfirmaAlq.setEnabled(true);
                btnTerminaAlq.setEnabled(false);
            }

            txtMatricula.setText(mat);
            cbxVehiculo.setSelectedItem(tipv);
            txtPma.setText("" + peso);
            txtPrecioBase.setText("" + pbd);
            txtPrecioBasePma.setText("" + pbp);
            txtPrecioDia.setText("" + pad);
            txtPrecioAdicional.setText("" + paf);
            cbxEstado.setSelectedItem(evh);
            txtDias.setText("" + dia);
            txtTotal.setText("" + total);

            limpiarAlquier();

        }
    }//GEN-LAST:event_btnAlquilarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        Eliminar();
        limpiarPantalla();
        limpiarTabla();
        listar();

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtFiltrarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltrarKeyTyped
        // TODO add your handling code here:

        txtFiltrar.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                trs.setRowFilter(RowFilter.regexFilter(txtFiltrar.getText(), 0));
            }
        });

        trs = new TableRowSorter(modelo);
        tblTabla.setRowSorter(trs);


    }//GEN-LAST:event_txtFiltrarKeyTyped

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        limpiarPantalla();
        limpiarTabla();
        listar();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtPmaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPmaKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_txtPmaKeyTyped

    private void txtDiasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiasKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDiasKeyTyped

    private void txtDiasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiasKeyReleased
        // TODO add your handling code here:
        float suma = 0;

        if (!"0".equals(txtDias.getText()) && !"".equals(txtDias.getText())) {

            String tpv = cbxVehiculo.getSelectedItem().toString();

            if (tpv.equals("Coche")) {

                int dias = Integer.parseInt(txtDias.getText());

                coche1.setDias(dias);
                coche1.Alquilar();

                //    float vdia = Float.parseFloat(txtPrecioDia.getText());
                //    float vbas = Float.parseFloat(txtPrecioBase.getText());
                suma = coche1.getPrecio_alquiler();
            }

            if (tpv.equals("Microbus")) {

                int dias = Integer.parseInt(txtDias.getText());

                micro.setDias(dias);
                micro.Alquilar();

                suma = micro.getPrecio_alquiler();
            }

            if (tpv.equals("Furgoneta")) {

                int dias = Integer.parseInt(txtDias.getText());
                float peso = Float.parseFloat(txtPma.getText());

                furgo.setDias(dias);
                furgo.setPeso(peso);

                furgo.Alquilar();

                suma = furgo.getPrecio_alquiler();

            }

            if (tpv.equals("Camion")) {

                int dias = Integer.parseInt(txtDias.getText());
                float peso = Float.parseFloat(txtPma.getText());

                camion.setDias(dias);
                camion.setPeso(peso);

                camion.Alquilar();

                suma = camion.getPrecio_alquiler();
            }
        }
        txtTotal.setText(Float.toString(suma));
    }//GEN-LAST:event_txtDiasKeyReleased

    private void btnTerminaAlqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerminaAlqActionPerformed
        // TODO add your handling code here:
        TerminarAlquiler();
        limpiarTabla();
        listar();
    }//GEN-LAST:event_btnTerminaAlqActionPerformed

    private void btnConfirmaAlqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmaAlqActionPerformed
        // TODO add your handling code here:
        CompletarAlquiler();
        limpiarTabla();
        listar();
    }//GEN-LAST:event_btnConfirmaAlqActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        //</editor-fold>

        /* Create and display the form */
        Formulario v = new Formulario();
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }

    void listar() {
        String sql;
        sql = "select * from VEHICULO";
        try {
            cn = con.getConnection();
            st = cn.createStatement();
            rs = st.executeQuery(sql);
            Object[] vehiculo = new Object[10];
//            String[] Titulos={"ID","DNI","NOMBRES"};         
//            model=new DefaultTableModel(null,Titulos);   
            modelo = (DefaultTableModel) tblTabla.getModel();
            while (rs.next()) {
                vehiculo[0] = rs.getString("Matricula");
                vehiculo[1] = rs.getString("Tipo_Vehiculo");
                vehiculo[2] = rs.getFloat("Peso_Toneladas");
                vehiculo[3] = rs.getFloat("Precio_Base_Alquiler");
                vehiculo[4] = rs.getFloat("Precio_Base_PMA");
                vehiculo[5] = rs.getFloat("Precio_Dia_Alquiler");
                vehiculo[6] = rs.getFloat("Precio_Fijo_Alquiler");
                vehiculo[7] = rs.getString("Estado_Arriendo");
                vehiculo[8] = rs.getInt("Dias_Alquilado");
                vehiculo[9] = rs.getFloat("Precio_Total");
                modelo.addRow(vehiculo);
            }
            tblTabla.setModel(modelo);

        } catch (Exception e) {
        }
    }

    void Agregar() {

        float psv = 0;
        int cont = 0;

        //String mat = vhl.getMatricula(); //MATRICULA VEHICULO
        //String tipv = vhl.getTipo_vehiculo();//TIPO VEHICULO
        String mat = txtMatricula.getText(); //MATRICULA VEHICULO
        String tipv = cbxVehiculo.getSelectedItem().toString();//TIPO VEHICULO
        float pba = Float.parseFloat(txtPrecioBase.getText()); //PRECIO BASE POR DIA
        float pbp = Float.parseFloat(txtPrecioBasePma.getText()); // PRECIO BASE PMA
        float pad = Float.parseFloat(txtPrecioDia.getText()); //PRECIO DIA ALQUIER
        float pfj = Float.parseFloat(txtPrecioAdicional.getText()); //PRECIO FIJO ALQUILER
        String evh = cbxEstado.getSelectedItem().toString();   //ESTADO DE ALQUILER 
        int ald = Integer.parseInt(txtDias.getText()); // DIAS ALQUILADOS
        float tot = Float.parseFloat(txtTotal.getText()); //PRECIO TOTAL ALQUILER

        if (mat.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar matricula");
            cont = 1;
        } else {
            if (mat.length() != 6) {
                JOptionPane.showMessageDialog(null, "Matricula debe ser de 6 caracteres");
                cont = 1;
            } else {
                for (int i = 0; i < tblTabla.getRowCount(); i++) {
                    if (tblTabla.getValueAt(i, 0).equals(mat)) {
                        JOptionPane.showMessageDialog(null, "Matricula ya existe");
                        return;
                    }
                }

                if (tipv.equals(" ")) {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar tipo vehiculo");
                    cont = 1;
                } else {
                    if (tipv.equals("Furgoneta") || tipv.equals("Camion")) {

                        try {
                            psv = Float.parseFloat(txtPma.getText());

                        } catch (Exception e) {
                            cont = 1;
                        }

                        if (psv <= 0) {
                            JOptionPane.showMessageDialog(null, "Para Furgoneta o Camion debe ingresar un peso correcto");
                            cont = 1;
                        }
                    }
                }
            }
        }

        /*if (tipv.equals("Coche")) {

        }*/
        if (cont == 0) {
            try {

                String sql = "insert into VEHICULO(Matricula,Tipo_Vehiculo,Peso_Toneladas, Precio_Base_Alquiler,Precio_Base_PMA, Precio_Dia_Alquiler, Precio_Fijo_Alquiler, Estado_Arriendo, Dias_Alquilado, Precio_Total ) values('" + mat + "','" + tipv + "','" + psv + "','" + pba + "','" + pbp + "','" + pad + "','" + pfj + "','" + evh + "','" + ald + "','" + tot + "')";
                cn = con.getConnection();
                st = cn.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Matricula registrada con exito");
//                limpiarTabla(modelo);  
            } catch (Exception e) {
            }
        }
    }

    void Modificar() {

        int cont = 0;
        float psv = 0;

        String mat = txtMatricula.getText(); //MATRICULA VEHICULO
        String tipv = cbxVehiculo.getSelectedItem().toString(); //TIPO VEHICULO
        String peso = txtPma.getText();

        float pba = Float.parseFloat(txtPrecioBase.getText()); //PRECIO BASE POR DIA
        float pbp = Float.parseFloat(txtPrecioBasePma.getText()); // PRECIO BASE PMA
        float pad = Float.parseFloat(txtPrecioDia.getText()); //PRECIO DIA ALQUIER
        float pfj = Float.parseFloat(txtPrecioAdicional.getText()); //PRECIO FIJO ALQUILER

        String evh = cbxEstado.getSelectedItem().toString();   //ESTADO DE ALQUILER 

        int ald = Integer.parseInt(txtDias.getText()); // DIAS ALQUILADOS

        float tot = Float.parseFloat(txtTotal.getText()); //PRECIO TOTAL ALQUILER

        if (tipv.equals(" ")) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar tipo vehiculo");
            cont = 1;
        } else {
            if ((tipv.equals("Furgoneta") || tipv.equals("Camion"))) {

                try {
                    psv = Float.parseFloat(txtPma.getText());

                } catch (Exception e) {
                    cont = 1;
                }

                if (psv <= 0) {
                    JOptionPane.showMessageDialog(null, "Para Furgoneta o Camion debe ingresar un peso correcto");
                    cont = 1;
                }
            }
        }
        if (cont == 0) {
            try {
                String sql = "update VEHICULO set Tipo_Vehiculo = '" + tipv + "',Peso_Toneladas = '" + psv + "', Precio_Base_Alquiler = '" + pba + "',Precio_Base_PMA = '" + pbp + "', Precio_Dia_Alquiler = '" + pad + "', Precio_Fijo_Alquiler = '" + pfj + "', Estado_Arriendo = '" + evh + "', Dias_Alquilado = '" + ald + "', Precio_Total = '" + tot + "' where Matricula = '" + mat + "'";
                cn = con.getConnection();
                st = cn.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Matricula modificada con exito");
                limpiarTabla();
//                limpiarTabla(modelo);   
            } catch (Exception e) {

            }
        }
    }

    void Eliminar() {

        String matri = txtMatricula.getText();//MATRICULA VEHICULO

        try {
            String sql = "delete from VEHICULO where Matricula= '" + matri + "'";
            cn = con.getConnection();
            st = cn.createStatement();
            st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null, "Matricula eliminada");

        } catch (Exception e) {

        }
    }

    void limpiarTabla() {
        for (int i = 0; i < tblTabla.getRowCount(); i++) {
            modelo.removeRow(i);
            i = i - 1;
        }
    }

    void TerminarAlquiler() {

        String mat = txtMatricula.getText(); //MATRICULA VEHICULO
        String tipv = cbxVehiculo.getSelectedItem().toString(); //TIPO VEHICULO
        float psv = Float.parseFloat(txtPma.getText());
        float pba = Float.parseFloat(txtPrecioBase.getText()); //PRECIO BASE POR DIA
        float pbp = Float.parseFloat(txtPrecioBasePma.getText()); // PRECIO BASE PMA
        float pad = Float.parseFloat(txtPrecioDia.getText()); //PRECIO DIA ALQUIER
        float pfj = Float.parseFloat(txtPrecioAdicional.getText()); //PRECIO FIJO ALQUILER

        String evh = cbxEstado.getSelectedItem().toString();   //ESTADO DE ALQUILER 

        int ald = 0; // DIAS ALQUILADOS

        float tot = 0; //PRECIO TOTAL ALQUILER

        if (evh.equals("Alquilado")) {
            JOptionPane.showMessageDialog(null, "Debe cambiar el estado de Alquiler");
        } else {
            try {
                String sql = "update VEHICULO set Tipo_Vehiculo = '" + tipv + "',Peso_Toneladas = '" + psv + "', Precio_Base_Alquiler = '" + pba + "',Precio_Base_PMA = '" + pbp + "', Precio_Dia_Alquiler = '" + pad + "', Precio_Fijo_Alquiler = '" + pfj + "', Estado_Arriendo = '" + evh + "', Dias_Alquilado = '" + ald + "', Precio_Total = '" + tot + "' where Matricula = '" + mat + "'";
                cn = con.getConnection();
                st = cn.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Matricula modificada con exito");
                txtDias.setText(Integer.toString(ald));
                txtTotal.setText(Float.toString(tot));
                btnConfirmaAlq.setEnabled(true);
                btnTerminaAlq.setEnabled(false);
            } catch (Exception e) {

            }
        }
    }

    void CompletarAlquiler() {

        String mat = txtMatricula.getText(); //MATRICULA VEHICULO
        String tipv = cbxVehiculo.getSelectedItem().toString(); //TIPO VEHICULO
        float psv = Float.parseFloat(txtPma.getText());
        float pba = Float.parseFloat(txtPrecioBase.getText()); //PRECIO BASE POR DIA
        float pbp = Float.parseFloat(txtPrecioBasePma.getText()); // PRECIO BASE PMA
        float pad = Float.parseFloat(txtPrecioDia.getText()); //PRECIO DIA ALQUIER
        float pfj = Float.parseFloat(txtPrecioAdicional.getText()); //PRECIO FIJO ALQUILER

        String evh = cbxEstado.getSelectedItem().toString();   //ESTADO DE ALQUILER 

        int ald = Integer.parseInt(txtDias.getText()); // DIAS ALQUILADOS
        float tot = Float.parseFloat(txtTotal.getText());//PRECIO TOTAL ALQUILER

        if (evh.equals("Sin Alquilar")) {
            JOptionPane.showMessageDialog(null, "Debe cambiar el estado de Alquiler");
        } else {
            if (ald == 0) {
                JOptionPane.showMessageDialog(null, "Debe ingresar dias a alquilar");
            } else {
                try {
                    String sql = "update VEHICULO set Tipo_Vehiculo = '" + tipv + "',Peso_Toneladas = '" + psv + "', Precio_Base_Alquiler = '" + pba + "',Precio_Base_PMA = '" + pbp + "', Precio_Dia_Alquiler = '" + pad + "', Precio_Fijo_Alquiler = '" + pfj + "', Estado_Arriendo = '" + evh + "', Dias_Alquilado = '" + ald + "', Precio_Total = '" + tot + "' where Matricula = '" + mat + "'";
                    cn = con.getConnection();
                    st = cn.createStatement();
                    st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Matricula modificada con exito");
                    txtDias.setText(Integer.toString(ald));
                    txtTotal.setText(Float.toString(tot));
                    btnConfirmaAlq.setEnabled(false);
                    btnTerminaAlq.setEnabled(true);
                } catch (Exception e) {

                }
            }
        }

    }

    void limpiarPantalla() {

        txtMatricula.setText("");
        cbxVehiculo.setSelectedItem(" ");
        txtPma.setText("0");
        txtPrecioBase.setText("0");
        txtPrecioBasePma.setText("0");
        txtPrecioDia.setText("0");
        txtPrecioAdicional.setText("0");
        txtDias.setText("0");
        txtTotal.setText("0");
        btnAgregar.setEnabled(true);
        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        txtPma.setEditable(false);
        txtDias.setEditable(false);
        txtTotal.setEditable(false);
        cbxVehiculo.setEnabled(true);
        cbxEstado.setEnabled(false);
        txtMatricula.setEditable(true);
        btnConfirmaAlq.setEnabled(false);
        btnTerminaAlq.setEnabled(false);
    }

    void limpiarEdicion() {

        txtMatricula.setEditable(false);
        cbxVehiculo.setEnabled(true);
        txtPma.setEditable(true);
        cbxEstado.setEnabled(false);
        txtDias.setEditable(false);
        btnConfirmaAlq.setEnabled(false);
        btnTerminaAlq.setEnabled(false);
        btnAgregar.setEnabled(false);
        cbxEstado.setEnabled(false);
        txtDias.setEditable(false);
        txtTotal.setEditable(false);
    }

    void limpiarAlquier() {

        btnModificar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnAgregar.setEnabled(false);
        txtPma.setEditable(false);
        cbxEstado.setEnabled(true);
        txtDias.setEditable(true);
        txtMatricula.setEditable(false);
        cbxVehiculo.setEnabled(false);
        txtPma.setEditable(false);
        cbxEstado.setEnabled(true);
        txtDias.setEditable(true);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnAgregar;
    public javax.swing.JButton btnAlquilar;
    public javax.swing.JButton btnConfirmaAlq;
    public javax.swing.JButton btnEditar;
    public javax.swing.JButton btnEliminar;
    public javax.swing.JButton btnModificar;
    public javax.swing.JButton btnNuevo;
    public javax.swing.JButton btnTerminaAlq;
    public javax.swing.JComboBox<String> cbxEstado;
    public javax.swing.JComboBox<String> cbxVehiculo;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel jblTitulo;
    public javax.swing.JLabel lblDias;
    public javax.swing.JLabel lblEstadoVehiculo;
    private javax.swing.JLabel lblFiltrar;
    public javax.swing.JLabel lblMatricula;
    public javax.swing.JLabel lblPMA;
    public javax.swing.JLabel lblPrecioAdicional;
    public javax.swing.JLabel lblPrecioBase;
    public javax.swing.JLabel lblPrecioDia;
    public javax.swing.JLabel lblTotal;
    public javax.swing.JPanel pnlDatos;
    public javax.swing.JPanel pnlLista;
    public javax.swing.JPanel pnlOperaciones;
    private javax.swing.JTable tblTabla;
    public javax.swing.JTextField txtDias;
    public javax.swing.JTextField txtFiltrar;
    public javax.swing.JTextField txtMatricula;
    public javax.swing.JTextField txtPma;
    public javax.swing.JTextField txtPrecioAdicional;
    public javax.swing.JTextField txtPrecioBase;
    public javax.swing.JTextField txtPrecioBasePma;
    public javax.swing.JTextField txtPrecioDia;
    public javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    public void cbxVehiculo(Clase_2 aThis) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
